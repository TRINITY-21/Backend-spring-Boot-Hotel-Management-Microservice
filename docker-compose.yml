version: '3.8'

services:
  room-service-app:
    build:
      context: ./RoomService
      dockerfile: Dockerfile
    container_name: room-service-app
    restart: always
    ports:
      - "4060:4060"
    environment:
      ROOM_SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/hotelRoomMGT
      ROOM_SPRING_DATASOURCE_USERNAME: uname
      ROOM_SPRING_DATASOURCE_PASSWORD: upass
      ROOM_SPRING_MAIL_USERNAME: youremail@gmail.com
      ROOM_SPRING_MAIL_PASSWORD: your pass word
      ROOM_AWS_ACCESS_KEY: your access key
      ROOM_AWS_SECRET_KEY: your secret key
      FRONTEND_HOSTNAME: http://localhost:7070
      USER_SERVICE_URL: http://user-service-app:4070/api/users
      BOOKING_SERVICE_URL: http://booking-service-app:4050/api/bookings
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4060/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - hotel-network

  user-service-app:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    container_name: user-service-app
    restart: always
    ports:
      - "4070:4070"
    environment:
      USER_SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/hotelUserMGT
      USER_SPRING_DATASOURCE_USERNAME: username
      USER_SPRING_DATASOURCE_PASSWORD: userpassword
      USER_SPRING_MAIL_USERNAME: your email
      USER_SPRING_MAIL_PASSWORD: your password
      USER_AWS_ACCESS_KEY: your aws access key
      USER_AWS_SECRET_KEY: your aws secret key
      FRONTEND_HOSTNAME: http://localhost:7070
      # Inter-service URLs
      USER_SERVICE_URL: http://user-service-app:4070/api/users
      BOOKING_SERVICE_URL: http://booking-service-app:4050/api/bookings
      ROOM_SERVICE_URL: http://room-service-app:4060/api/rooms

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4070/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - hotel-network

  booking-service-app:
    build:
      context: ./BookingService
      dockerfile: Dockerfile
    container_name: booking-service-app
    restart: always
    ports:
      - "4050:4050"
    environment:
      BOOKING_SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/hotelUserMGT
      BOOKING_SPRING_DATASOURCE_USERNAME: username
      BOOKING_SPRING_DATASOURCE_PASSWORD: userpassword
      BOOKING_SPRING_MAIL_USERNAME: your email
      BOOKING_SPRING_MAIL_PASSWORD: your password
      BOOKING_AWS_ACCESS_KEY: your aws access key
      BOOKING_AWS_SECRET_KEY: your aws secret key
      FRONTEND_HOSTNAME: http://localhost:7070
      # Inter-service URLs
      USER_SERVICE_URL: http://user-service-app:4070/api/users
      BOOKING_SERVICE_URL: http://booking-service-app:4050/api/bookings
      ROOM_SERVICE_URL: http://room-service-app:4060/api/rooms
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4050/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - hotel-network

networks:
  hotel-network:
    driver: bridge
